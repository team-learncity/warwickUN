{"version":3,"file":"themesettings.min.js","sources":["../src/themesettings.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Theme settings js logic.\r\n *\r\n * @package    theme_moove\r\n * @copyright  2020 Willian Mano - http://conecti.me\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\ndefine(['jquery', 'core/modal_factory', 'theme_moove/themesettings_modal'],\r\n    function($, ModalFactory, ThemeSettingsModal) {\r\n\r\n        var SELECTORS = {\r\n            TOGGLE_REGION: '#themesettings-control'\r\n        };\r\n\r\n        /**\r\n         * Constructor for the ThemeSettings.\r\n         *\r\n         * @param {object} root The root jQuery element for the modal\r\n         */\r\n        var ThemeSettings = function() {\r\n            this.registerEventListeners();\r\n        };\r\n\r\n        /**\r\n         * Open / close the blocks drawer.\r\n         *\r\n         * @method toggleThemeSettings\r\n         * @param {Event} e\r\n         */\r\n        ThemeSettings.prototype.openThemeSettings = function() {\r\n            ModalFactory.create({\r\n                type: ThemeSettingsModal.TYPE\r\n            })\r\n            .then(function(modal) {\r\n                modal.show();\r\n            });\r\n        };\r\n\r\n        /**\r\n         * Set up all of the event handling for the modal.\r\n         *\r\n         * @method registerEventListeners\r\n         */\r\n        ThemeSettings.prototype.registerEventListeners = function() {\r\n            document.getElementById(\"nav-drawer-footer\")\r\n                .addEventListener(\"keyup\", function(e) {\r\n                    if (e.keyCode === 13) {\r\n                        $(SELECTORS.TOGGLE_REGION).click();\r\n                    }\r\n                });\r\n\r\n            $(SELECTORS.TOGGLE_REGION).click(function(e) {\r\n                this.openThemeSettings(e);\r\n                e.preventDefault();\r\n            }.bind(this));\r\n        };\r\n\r\n        return {\r\n            'init': function() {\r\n                return new ThemeSettings();\r\n            }\r\n        };\r\n    }\r\n);\r\n"],"names":["define","$","ModalFactory","ThemeSettingsModal","SELECTORS","ThemeSettings","registerEventListeners","prototype","openThemeSettings","create","type","TYPE","then","modal","show","document","getElementById","addEventListener","e","keyCode","click","preventDefault","bind","this"],"mappings":";;;;;;;AAsBAA,mCAAO,CAAC,SAAU,qBAAsB,oCACpC,SAASC,EAAGC,aAAcC,wBAElBC,wBACe,yBAQfC,cAAgB,gBACXC,iCASTD,cAAcE,UAAUC,kBAAoB,WACxCN,aAAaO,OAAO,CAChBC,KAAMP,mBAAmBQ,OAE5BC,MAAK,SAASC,OACXA,MAAMC,WASdT,cAAcE,UAAUD,uBAAyB,WAC7CS,SAASC,eAAe,qBACnBC,iBAAiB,SAAS,SAASC,GACd,KAAdA,EAAEC,SACFlB,EAAEG,yBAAyBgB,WAIvCnB,EAAEG,yBAAyBgB,MAAM,SAASF,QACjCV,kBAAkBU,GACvBA,EAAEG,kBACJC,KAAKC,QAGJ,MACK,kBACG,IAAIlB"}